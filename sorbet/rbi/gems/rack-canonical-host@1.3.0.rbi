# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rack-canonical-host` gem.
# Please instead update this file by running `bin/tapioca gem rack-canonical-host`.


# source://rack-canonical-host//lib/rack/canonical_host/redirect.rb#4
module Rack
  class << self
    # source://rack/3.1.8/lib/rack/version.rb#18
    def release; end
  end
end

# source://rack-canonical-host//lib/rack/canonical_host/redirect.rb#5
class Rack::CanonicalHost
  # @return [CanonicalHost] a new instance of CanonicalHost
  #
  # source://rack-canonical-host//lib/rack/canonical_host.rb#8
  def initialize(app, host = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://rack-canonical-host//lib/rack/canonical_host.rb#15
  def call(env); end

  protected

  # Returns the value of attribute app.
  #
  # source://rack-canonical-host//lib/rack/canonical_host.rb#32
  def app; end

  # Sets the attribute app
  #
  # @param value the value to set the attribute app to.
  #
  # source://rack-canonical-host//lib/rack/canonical_host.rb#32
  def app=(_arg0); end

  # Returns the value of attribute block.
  #
  # source://rack-canonical-host//lib/rack/canonical_host.rb#35
  def block; end

  # Sets the attribute block
  #
  # @param value the value to set the attribute block to.
  #
  # source://rack-canonical-host//lib/rack/canonical_host.rb#35
  def block=(_arg0); end

  # Returns the value of attribute host.
  #
  # source://rack-canonical-host//lib/rack/canonical_host.rb#33
  def host; end

  # Sets the attribute host
  #
  # @param value the value to set the attribute host to.
  #
  # source://rack-canonical-host//lib/rack/canonical_host.rb#33
  def host=(_arg0); end

  # Returns the value of attribute options.
  #
  # source://rack-canonical-host//lib/rack/canonical_host.rb#34
  def options; end

  # Sets the attribute options
  #
  # @param value the value to set the attribute options to.
  #
  # source://rack-canonical-host//lib/rack/canonical_host.rb#34
  def options=(_arg0); end

  private

  # source://rack-canonical-host//lib/rack/canonical_host.rb#39
  def evaluate_host(env); end
end

# source://rack-canonical-host//lib/rack/canonical_host/redirect.rb#6
class Rack::CanonicalHost::Redirect
  # @return [Redirect] a new instance of Redirect
  #
  # source://rack-canonical-host//lib/rack/canonical_host/redirect.rb#18
  def initialize(env, host, options = T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://rack-canonical-host//lib/rack/canonical_host/redirect.rb#26
  def canonical?; end

  # source://rack-canonical-host//lib/rack/canonical_host/redirect.rb#31
  def response; end

  protected

  # Returns the value of attribute cache_control.
  #
  # source://rack-canonical-host//lib/rack/canonical_host/redirect.rb#41
  def cache_control; end

  # Sets the attribute cache_control
  #
  # @param value the value to set the attribute cache_control to.
  #
  # source://rack-canonical-host//lib/rack/canonical_host/redirect.rb#41
  def cache_control=(_arg0); end

  # Returns the value of attribute conditions.
  #
  # source://rack-canonical-host//lib/rack/canonical_host/redirect.rb#40
  def conditions; end

  # Sets the attribute conditions
  #
  # @param value the value to set the attribute conditions to.
  #
  # source://rack-canonical-host//lib/rack/canonical_host/redirect.rb#40
  def conditions=(_arg0); end

  # Returns the value of attribute env.
  #
  # source://rack-canonical-host//lib/rack/canonical_host/redirect.rb#37
  def env; end

  # Sets the attribute env
  #
  # @param value the value to set the attribute env to.
  #
  # source://rack-canonical-host//lib/rack/canonical_host/redirect.rb#37
  def env=(_arg0); end

  # Returns the value of attribute host.
  #
  # source://rack-canonical-host//lib/rack/canonical_host/redirect.rb#38
  def host; end

  # Sets the attribute host
  #
  # @param value the value to set the attribute host to.
  #
  # source://rack-canonical-host//lib/rack/canonical_host/redirect.rb#38
  def host=(_arg0); end

  # Returns the value of attribute ignore.
  #
  # source://rack-canonical-host//lib/rack/canonical_host/redirect.rb#39
  def ignore; end

  # Sets the attribute ignore
  #
  # @param value the value to set the attribute ignore to.
  #
  # source://rack-canonical-host//lib/rack/canonical_host/redirect.rb#39
  def ignore=(_arg0); end

  private

  # @return [Boolean]
  #
  # source://rack-canonical-host//lib/rack/canonical_host/redirect.rb#45
  def any_match?(patterns, request_uri); end

  # @return [Boolean]
  #
  # source://rack-canonical-host//lib/rack/canonical_host/redirect.rb#64
  def enabled?; end

  # source://rack-canonical-host//lib/rack/canonical_host/redirect.rb#56
  def headers; end

  # @return [Boolean]
  #
  # source://rack-canonical-host//lib/rack/canonical_host/redirect.rb#70
  def ignored?; end

  # @return [Boolean]
  #
  # source://rack-canonical-host//lib/rack/canonical_host/redirect.rb#76
  def known?; end

  # source://rack-canonical-host//lib/rack/canonical_host/redirect.rb#80
  def new_url; end

  # source://rack-canonical-host//lib/rack/canonical_host/redirect.rb#86
  def request_uri; end
end

# source://rack-canonical-host//lib/rack/canonical_host/redirect.rb#7
Rack::CanonicalHost::Redirect::HTML_TEMPLATE = T.let(T.unsafe(nil), String)

# source://rack-canonical-host//lib/rack/canonical_host/request.rb#6
class Rack::CanonicalHost::Request
  # @return [Request] a new instance of Request
  #
  # source://rack-canonical-host//lib/rack/canonical_host/request.rb#17
  def initialize(env); end

  # source://rack-canonical-host//lib/rack/canonical_host/request.rb#28
  def bad_request_response; end

  # @return [Boolean]
  #
  # source://rack-canonical-host//lib/rack/canonical_host/request.rb#21
  def valid?; end

  protected

  # Returns the value of attribute env.
  #
  # source://rack-canonical-host//lib/rack/canonical_host/request.rb#34
  def env; end

  # Sets the attribute env
  #
  # @param value the value to set the attribute env to.
  #
  # source://rack-canonical-host//lib/rack/canonical_host/request.rb#34
  def env=(_arg0); end
end

# source://rack-canonical-host//lib/rack/canonical_host/request.rb#7
Rack::CanonicalHost::Request::BAD_REQUEST = T.let(T.unsafe(nil), String)

# source://rack-canonical-host//lib/rack/canonical_host/version.rb#3
Rack::CanonicalHost::VERSION = T.let(T.unsafe(nil), String)
