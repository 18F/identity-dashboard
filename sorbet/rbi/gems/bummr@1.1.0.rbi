# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `bummr` gem.
# Please instead update this file by running `bin/tapioca gem bummr`.


# source://bummr//lib/bummr/cli.rb#2
BASE_BRANCH = T.let(T.unsafe(nil), String)

# source://bummr//lib/bummr/log.rb#1
module Bummr; end

# source://bummr//lib/bummr/bisecter.rb#2
class Bummr::Bisecter
  include ::Singleton
  extend ::Singleton::SingletonClassMethods

  # source://bummr//lib/bummr/bisecter.rb#5
  def bisect; end

  class << self
    private

    def allocate; end
    def new(*_arg0); end
  end
end

# source://bummr//lib/bummr/cli.rb#6
class Bummr::CLI < ::Thor
  include ::Bummr::Log
  include ::Bummr::Prompt
  include ::Bummr::Scm

  # source://bummr//lib/bummr/cli.rb#71
  def bisect; end

  # source://bummr//lib/bummr/cli.rb#12
  def check(fullcheck = T.unsafe(nil)); end

  # source://bummr//lib/bummr/cli.rb#81
  def remove_commit(sha); end

  # source://bummr//lib/bummr/cli.rb#54
  def test; end

  # source://bummr//lib/bummr/cli.rb#28
  def update; end

  private

  # source://bummr//lib/bummr/cli.rb#87
  def display_info; end

  # source://bummr//lib/bummr/cli.rb#102
  def print_received_options; end
end

# source://bummr//lib/bummr/check.rb#2
class Bummr::Check < ::Thor
  include ::Singleton
  include ::Bummr::Prompt
  extend ::Singleton::SingletonClassMethods

  # source://bummr//lib/bummr/check.rb#7
  def check(fullcheck = T.unsafe(nil)); end

  private

  # source://bummr//lib/bummr/check.rb#29
  def check_base_branch; end

  # source://bummr//lib/bummr/check.rb#64
  def check_diff; end

  # source://bummr//lib/bummr/check.rb#38
  def check_log; end

  # source://bummr//lib/bummr/check.rb#46
  def check_status; end

  class << self
    private

    def allocate; end
    def new(*_arg0); end
  end
end

# source://bummr//lib/bummr/git.rb#2
class Bummr::Git
  include ::Singleton
  include ::Bummr::Log
  extend ::Singleton::SingletonClassMethods

  # @return [Git] a new instance of Git
  #
  # source://bummr//lib/bummr/git.rb#6
  def initialize; end

  # source://bummr//lib/bummr/git.rb#10
  def add(files); end

  # source://bummr//lib/bummr/git.rb#14
  def commit(message); end

  # source://bummr//lib/bummr/git.rb#23
  def message(sha); end

  # source://bummr//lib/bummr/git.rb#19
  def rebase_interactive(sha); end

  private

  # Returns the value of attribute git_commit.
  #
  # source://bummr//lib/bummr/git.rb#29
  def git_commit; end

  class << self
    private

    def allocate; end
    def new(*_arg0); end
  end
end

# source://bummr//lib/bummr/log.rb#2
module Bummr::Log
  # source://bummr//lib/bummr/log.rb#3
  def log(message); end
end

# source://bummr//lib/bummr/outdated.rb#6
class Bummr::Outdated
  include ::Singleton
  extend ::Singleton::SingletonClassMethods

  # source://bummr//lib/bummr/outdated.rb#9
  def outdated_gems(options = T.unsafe(nil)); end

  # source://bummr//lib/bummr/outdated.rb#32
  def parse_gem_from(line); end

  private

  # source://bummr//lib/bummr/outdated.rb#46
  def gemfile; end

  # source://bummr//lib/bummr/outdated.rb#42
  def gemfile_contains(gem_name); end

  class << self
    private

    def allocate; end
    def new(*_arg0); end
  end
end

# source://bummr//lib/bummr/prompt.rb#2
module Bummr::Prompt
  # @return [Boolean]
  #
  # source://bummr//lib/bummr/prompt.rb#3
  def yes?(*args); end

  private

  # @return [Boolean]
  #
  # source://bummr//lib/bummr/prompt.rb#9
  def headless?; end
end

# source://bummr//lib/bummr/remover.rb#2
class Bummr::Remover < ::Thor
  include ::Singleton
  include ::Bummr::Log
  include ::Bummr::Scm
  extend ::Singleton::SingletonClassMethods

  # source://bummr//lib/bummr/remover.rb#8
  def remove_commit(sha); end

  class << self
    private

    def allocate; end
    def new(*_arg0); end
  end
end

# source://bummr//lib/bummr/scm.rb#2
module Bummr::Scm
  private

  # source://bummr//lib/bummr/scm.rb#5
  def git; end
end

# source://bummr//lib/bummr/updater.rb#2
class Bummr::Updater
  include ::Bummr::Log
  include ::Bummr::Scm

  # @return [Updater] a new instance of Updater
  #
  # source://bummr//lib/bummr/updater.rb#6
  def initialize(outdated_gems); end

  # source://bummr//lib/bummr/updater.rb#18
  def update_gem(gem, index); end

  # source://bummr//lib/bummr/updater.rb#10
  def update_gems; end

  # source://bummr//lib/bummr/updater.rb#45
  def updated_version_for(gem); end
end

# source://bummr//lib/bummr/version.rb#2
Bummr::VERSION = T.let(T.unsafe(nil), String)

# source://bummr//lib/bummr/cli.rb#3
HEADLESS = T.let(T.unsafe(nil), FalseClass)

# source://bummr//lib/bummr/cli.rb#1
TEST_COMMAND = T.let(T.unsafe(nil), String)
