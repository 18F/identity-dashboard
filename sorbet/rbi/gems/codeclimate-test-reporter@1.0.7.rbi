# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `codeclimate-test-reporter` gem.
# Please instead update this file by running `bin/tapioca gem codeclimate-test-reporter`.


# source://codeclimate-test-reporter//lib/code_climate/test_reporter.rb#1
module CodeClimate; end

# source://codeclimate-test-reporter//lib/code_climate/test_reporter.rb#2
module CodeClimate::TestReporter
  class << self
    # source://codeclimate-test-reporter//lib/code_climate/test_reporter.rb#67
    def ci_service_data; end

    # source://codeclimate-test-reporter//lib/code_climate/test_reporter/configuration.rb#17
    def configuration; end

    # source://codeclimate-test-reporter//lib/code_climate/test_reporter/configuration.rb#7
    def configure; end

    # source://codeclimate-test-reporter//lib/code_climate/test_reporter.rb#51
    def configured_branch; end

    # source://codeclimate-test-reporter//lib/code_climate/test_reporter.rb#55
    def current_branch; end

    # @return [Boolean]
    #
    # source://codeclimate-test-reporter//lib/code_climate/test_reporter.rb#27
    def environment_variable_set?; end

    # source://codeclimate-test-reporter//lib/code_climate/test_reporter.rb#59
    def logger; end

    # source://codeclimate-test-reporter//lib/code_climate/test_reporter.rb#17
    def run(results); end

    # @return [Boolean]
    #
    # source://codeclimate-test-reporter//lib/code_climate/test_reporter.rb#23
    def run?; end

    # @return [Boolean]
    #
    # source://codeclimate-test-reporter//lib/code_climate/test_reporter.rb#38
    def run_on_current_branch?; end

    # source://codeclimate-test-reporter//lib/code_climate/test_reporter.rb#12
    def start; end

    # @return [Boolean]
    #
    # source://codeclimate-test-reporter//lib/code_climate/test_reporter.rb#63
    def tddium?; end
  end
end

# source://codeclimate-test-reporter//lib/code_climate/test_reporter/calculate_blob.rb#3
class CodeClimate::TestReporter::CalculateBlob
  # @return [CalculateBlob] a new instance of CalculateBlob
  #
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/calculate_blob.rb#4
  def initialize(file_path); end

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/calculate_blob.rb#8
  def blob_id; end

  private

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/calculate_blob.rb#14
  def calculate_with_file; end

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/calculate_blob.rb#27
  def calculate_with_git; end
end

# source://codeclimate-test-reporter//lib/code_climate/test_reporter/ci.rb#3
class CodeClimate::TestReporter::Ci
  class << self
    # source://codeclimate-test-reporter//lib/code_climate/test_reporter/ci.rb#4
    def service_data(env = T.unsafe(nil)); end
  end
end

# source://codeclimate-test-reporter//lib/code_climate/test_reporter/client.rb#7
class CodeClimate::TestReporter::Client
  # N.B. Not a generalized solution for posting multiple results
  # N.B. Only works with in tandem with additional communication from
  # Solano.
  #
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/client.rb#19
  def batch_post_results(files); end

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/client.rb#11
  def host; end

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/client.rb#50
  def post_results(result); end

  private

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/client.rb#97
  def ca_file; end

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/client.rb#89
  def compress(str); end

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/client.rb#76
  def http_client(uri); end
end

# in seconds
#
# source://codeclimate-test-reporter//lib/code_climate/test_reporter/client.rb#8
CodeClimate::TestReporter::Client::DEFAULT_TIMEOUT = T.let(T.unsafe(nil), Integer)

# source://codeclimate-test-reporter//lib/code_climate/test_reporter/client.rb#9
CodeClimate::TestReporter::Client::USER_AGENT = T.let(T.unsafe(nil), String)

# source://codeclimate-test-reporter//lib/code_climate/test_reporter/configuration.rb#21
class CodeClimate::TestReporter::Configuration
  # @return [Configuration] a new instance of Configuration
  #
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/configuration.rb#26
  def initialize; end

  # Returns the value of attribute branch.
  #
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/configuration.rb#22
  def branch; end

  # Sets the attribute branch
  #
  # @param value the value to set the attribute branch to.
  #
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/configuration.rb#22
  def branch=(_arg0); end

  # Returns the value of attribute git_dir.
  #
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/configuration.rb#22
  def git_dir; end

  # Sets the attribute git_dir
  #
  # @param value the value to set the attribute git_dir to.
  #
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/configuration.rb#22
  def git_dir=(_arg0); end

  # Returns the value of attribute gzip_request.
  #
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/configuration.rb#22
  def gzip_request; end

  # Sets the attribute gzip_request
  #
  # @param value the value to set the attribute gzip_request to.
  #
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/configuration.rb#22
  def gzip_request=(_arg0); end

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/configuration.rb#30
  def logger; end

  # Sets the attribute logger
  #
  # @param value the value to set the attribute logger to.
  #
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/configuration.rb#24
  def logger=(_arg0); end

  # Returns the value of attribute path_prefix.
  #
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/configuration.rb#22
  def path_prefix; end

  # Sets the attribute path_prefix
  #
  # @param value the value to set the attribute path_prefix to.
  #
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/configuration.rb#22
  def path_prefix=(_arg0); end

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/configuration.rb#34
  def profile; end

  # Sets the attribute profile
  #
  # @param value the value to set the attribute profile to.
  #
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/configuration.rb#24
  def profile=(_arg0); end

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/configuration.rb#38
  def skip_token; end

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/configuration.rb#42
  def timeout; end

  # Sets the attribute timeout
  #
  # @param value the value to set the attribute timeout to.
  #
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/configuration.rb#24
  def timeout=(_arg0); end

  private

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/configuration.rb#48
  def default_logger; end
end

# source://codeclimate-test-reporter//lib/code_climate/test_reporter/exception_message.rb#30
class CodeClimate::TestReporter::ExceptionMessage
  # @return [ExceptionMessage] a new instance of ExceptionMessage
  #
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/exception_message.rb#36
  def initialize(exception); end

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/exception_message.rb#40
  def message; end

  private

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/exception_message.rb#63
  def exception_class; end

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/exception_message.rb#67
  def http_stubbing_exception; end
end

# source://codeclimate-test-reporter//lib/code_climate/test_reporter/exception_message.rb#31
CodeClimate::TestReporter::ExceptionMessage::HTTP_STUBBING_MESSAGES = T.let(T.unsafe(nil), Hash)

# source://codeclimate-test-reporter//lib/code_climate/test_reporter/formatter.rb#14
class CodeClimate::TestReporter::Formatter
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/formatter.rb#15
  def format(results); end

  private

  # Re-implementation of Simplecov::ResultMerger#merged_result, which is
  # needed because calling it directly gets you into caching land with files
  # on disk.
  #
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/formatter.rb#93
  def merge_results(results); end

  # @return [Boolean]
  #
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/formatter.rb#35
  def partial?; end

  # Convert to Float before rounding.
  # Fixes [#7] possible segmentation fault when calling #round on a Rational
  #
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/formatter.rb#86
  def round(numeric, precision); end

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/formatter.rb#39
  def to_payload(result); end
end

# source://codeclimate-test-reporter//lib/code_climate/test_reporter/git.rb#3
class CodeClimate::TestReporter::Git
  class << self
    # source://codeclimate-test-reporter//lib/code_climate/test_reporter/git.rb#17
    def branch_from_git_or_ci; end

    # source://codeclimate-test-reporter//lib/code_climate/test_reporter/git.rb#32
    def clean_git_branch; end

    # source://codeclimate-test-reporter//lib/code_climate/test_reporter/git.rb#25
    def clean_service_branch; end

    # source://codeclimate-test-reporter//lib/code_climate/test_reporter/git.rb#21
    def committed_at_from_git_or_ci; end

    # source://codeclimate-test-reporter//lib/code_climate/test_reporter/git.rb#13
    def head_from_git_or_ci; end

    # source://codeclimate-test-reporter//lib/code_climate/test_reporter/git.rb#5
    def info; end

    private

    # source://codeclimate-test-reporter//lib/code_climate/test_reporter/git.rb#61
    def branch_from_git; end

    # source://codeclimate-test-reporter//lib/code_climate/test_reporter/git.rb#50
    def committed_at_from_ci; end

    # source://codeclimate-test-reporter//lib/code_climate/test_reporter/git.rb#56
    def committed_at_from_git; end

    # source://codeclimate-test-reporter//lib/code_climate/test_reporter/git.rb#74
    def configured_git_dir; end

    # source://codeclimate-test-reporter//lib/code_climate/test_reporter/git.rb#65
    def git(command); end

    # source://codeclimate-test-reporter//lib/code_climate/test_reporter/git.rb#69
    def git_dir; end

    # source://codeclimate-test-reporter//lib/code_climate/test_reporter/git.rb#46
    def head_from_ci; end

    # source://codeclimate-test-reporter//lib/code_climate/test_reporter/git.rb#41
    def head_from_git; end

    # @return [Boolean]
    #
    # source://codeclimate-test-reporter//lib/code_climate/test_reporter/git.rb#78
    def rails_git_dir_present?; end
  end
end

# source://codeclimate-test-reporter//lib/code_climate/test_reporter/payload_validator.rb#3
class CodeClimate::TestReporter::InvalidPayload < ::StandardError; end

# source://codeclimate-test-reporter//lib/code_climate/test_reporter/payload_validator.rb#5
class CodeClimate::TestReporter::PayloadValidator
  # @return [PayloadValidator] a new instance of PayloadValidator
  #
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/payload_validator.rb#6
  def initialize(payload); end

  # @raise [InvalidPayload]
  #
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/payload_validator.rb#14
  def validate; end

  private

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/payload_validator.rb#25
  def commit_sha; end

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/payload_validator.rb#54
  def commit_sha_from_ci_service; end

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/payload_validator.rb#50
  def commit_sha_from_git; end

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/payload_validator.rb#29
  def committed_at; end

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/payload_validator.rb#34
  def run_at; end

  # @return [Boolean]
  #
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/payload_validator.rb#38
  def source_files?; end

  # @return [Boolean]
  #
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/payload_validator.rb#46
  def valid_source_file?(file); end

  # @return [Boolean]
  #
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/payload_validator.rb#42
  def valid_source_files?; end

  class << self
    # source://codeclimate-test-reporter//lib/code_climate/test_reporter/payload_validator.rb#10
    def validate(payload); end
  end
end

# source://codeclimate-test-reporter//lib/code_climate/test_reporter/post_results.rb#3
class CodeClimate::TestReporter::PostResults
  # @return [PostResults] a new instance of PostResults
  #
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/post_results.rb#4
  def initialize(results); end

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/post_results.rb#8
  def post; end

  private

  # @return [Boolean]
  #
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/post_results.rb#24
  def write_to_file?; end
end

# source://codeclimate-test-reporter//lib/code_climate/test_reporter/shorten_filename.rb#3
class CodeClimate::TestReporter::ShortenFilename
  # @return [ShortenFilename] a new instance of ShortenFilename
  #
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/shorten_filename.rb#4
  def initialize(filename); end

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/shorten_filename.rb#8
  def short_filename; end

  private

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/shorten_filename.rb#15
  def apply_prefix(filename); end
end

# source://codeclimate-test-reporter//lib/code_climate/test_reporter/exception_message.rb#15
class CodeClimate::TestReporter::VCRMessage
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/exception_message.rb#20
  def instructions; end

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/exception_message.rb#16
  def library_name; end
end

# source://codeclimate-test-reporter//lib/code_climate/test_reporter/version.rb#3
CodeClimate::TestReporter::VERSION = T.let(T.unsafe(nil), String)

# source://codeclimate-test-reporter//lib/code_climate/test_reporter.rb#3
CodeClimate::TestReporter::WARNING_MESSAGE = T.let(T.unsafe(nil), String)

# source://codeclimate-test-reporter//lib/code_climate/test_reporter/exception_message.rb#3
class CodeClimate::TestReporter::WebMockMessage
  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/exception_message.rb#8
  def instructions; end

  # source://codeclimate-test-reporter//lib/code_climate/test_reporter/exception_message.rb#4
  def library_name; end
end
