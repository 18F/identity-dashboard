# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `ServiceConfigWizardController`.
# Please instead update this file by running `bin/tapioca dsl ServiceConfigWizardController`.


class ServiceConfigWizardController
  sig { returns(HelperProxy) }
  def helpers; end

  module HelperMethods
    include ::ActionController::Base::HelperMethods
    include ::ApplicationHelper
    include ::BannerHelper
    include ::SecurityEventHelper
    include ::ServiceConfigWizardHelper
    include ::ServiceProviderHelper
    include ::TeamHelper
    include ::ToolHelper
    include ::UserHelper
    include ::DeviseHelper
    include ::Pundit::Helper
    include ::ApplicationController::HelperMethods

    sig { params(step_name: T.untyped).returns(T.untyped) }
    def current_step?(step_name); end

    sig { returns(T.untyped) }
    def draft_service_provider; end

    sig { params(step_name: T.untyped).returns(T.untyped) }
    def future_step?(step_name); end

    sig { returns(T.untyped) }
    def issuer_read_only?; end

    sig { params(step_name: T.untyped).returns(T.untyped) }
    def next_step?(step_name); end

    sig { params(options: T.untyped).returns(T.untyped) }
    def next_wizard_path(options = T.unsafe(nil)); end

    sig { params(options: T.untyped).returns(T.untyped) }
    def next_wizard_url(options = T.unsafe(nil)); end

    sig { params(step_name: T.untyped).returns(T.untyped) }
    def past_step?(step_name); end

    sig { params(step_name: T.untyped).returns(T.untyped) }
    def previous_step?(step_name); end

    sig { params(options: T.untyped).returns(T.untyped) }
    def previous_wizard_path(options = T.unsafe(nil)); end

    sig { params(options: T.untyped).returns(T.untyped) }
    def previous_wizard_url(options = T.unsafe(nil)); end

    sig { returns(T.untyped) }
    def show_idv_redirect_urls?; end

    sig { returns(T.untyped) }
    def show_oidc_options?; end

    sig { returns(T.untyped) }
    def show_saml_options?; end

    sig { returns(T.untyped) }
    def step; end

    sig { params(goto_step: T.untyped, options: T.untyped).returns(T.untyped) }
    def wizard_path(goto_step = T.unsafe(nil), options = T.unsafe(nil)); end

    sig { returns(T.untyped) }
    def wizard_steps; end

    sig { params(goto_step: T.untyped, options: T.untyped).returns(T.untyped) }
    def wizard_url(goto_step = T.unsafe(nil), options = T.unsafe(nil)); end
  end

  class HelperProxy < ::ActionView::Base
    include HelperMethods
  end
end
