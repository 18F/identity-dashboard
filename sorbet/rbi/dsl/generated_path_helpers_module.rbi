# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `GeneratedPathHelpersModule`.
# Please instead update this file by running `bin/tapioca dsl GeneratedPathHelpersModule`.


module GeneratedPathHelpersModule
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionDispatch::Routing::PolymorphicRoutes

  sig { params(args: T.untyped).returns(String) }
  def api_security_events_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def api_service_providers_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def auth_logindotgov_callback_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def banner_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def banners_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def destroy_user_session_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_banner_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_service_provider_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_team_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_team_user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def edit_user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def env_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_banner_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_service_config_wizard_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_service_provider_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_team_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_team_user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def new_user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_blob_representation_proxy_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_direct_uploads_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_disk_service_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_properties_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_info_routes_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_mailers_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_representation_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_service_blob_proxy_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_proxy_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def rails_storage_redirect_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def remove_unconfirmed_users_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def root_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_event_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_events_all_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_events_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def security_events_search_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def service_config_wizard_index_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def service_config_wizard_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def service_provider_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def service_providers_all_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def service_providers_deleted_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def service_providers_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def service_providers_publish_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_remove_confirm_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def team_users_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def teams_all_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def teams_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def tools_saml_request_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def update_rails_disk_service_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def user_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def users_none_path(*args); end

  sig { params(args: T.untyped).returns(String) }
  def users_path(*args); end
end
