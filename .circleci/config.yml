# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1.4.6
jobs:
  build:
    docker:
      # Specify the Ruby version you desire here
      - image: cimg/ruby:3.2.2-browsers
        environment:
          RAILS_ENV: test
          CC_TEST_REPORTER_ID: 39be7be4c9a09e955bd481daa7196fe4dccd67f3ee53e24e91535169eea78123
          COVERAGE: true
          # The base image sets NODE_VERSION environment variable, which we don't intend to use. Its
          # presence will cause NVM to treat it as the default version. Unsetting it allows for NVM
          # to use the version from .nvmrc instead.
          NODE_VERSION: ''

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: postgres:13.5
        environment:
          POSTGRES_USER: circleci
          POSTGRES_PASSWORD: password

    working_directory: ~/identity-dashboard

    steps:
      - checkout

      - browser-tools/install-browser-tools

      - restore_cache:
          key: identity-dashboard-{{ checksum "Gemfile.lock" }}

      - run:
          name: Switch Node.js version
          command: |
            wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
            export NVM_DIR="$HOME/.nvm"
            . "$NVM_DIR/nvm.sh" --install
            echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV;
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV;
            node -v

      - run:
          name: Install dependencies
          command: |
            gem install bundler
            bundle install --deployment --jobs=4 --retry=3 --without deploy development production --path vendor/bundle
            npm install
      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      # Store bundle cache
      - save_cache:
          key: identity-dashboard-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Test Setup
          command: |
            bin/rails assets:precompile
            cp config/application.yml.default config/application.yml
            bundle exec rake db:setup

      - run:
          name: Run Tests
          command: |
            mkdir /tmp/test-results
            ./cc-test-reporter before-build

            make lint test
            bundle exec rubocop
      - run:
          name: Upload Test Results to Code Climate
          command: |
            ./cc-test-reporter format-coverage -t simplecov $CIRCLE_ARTIFACTS/coverage/.resultset.json
            ./cc-test-reporter upload-coverage

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
